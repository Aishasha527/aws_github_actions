name: Build and Deploy

#on:
#  workflow_dispatch: {}

on:
  push:
    branches:
      - main

env:
  applicationfolder: spring-boot-hello-world-example
  AWS_REGION: ap-southeast-1
  S3BUCKET: codedeploystack-webappdeploymentbucket-rd1ht5nx1joj

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
        name: Checkout Repository

#      - uses: aws-actions/configure-aws-credentials@v4
#        with:
#          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
#          role-session-name: GitHub-Action-Role
#          aws-region: ${{ env.AWS_REGION }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        working-directory: ${{ env.applicationfolder }}
        run: $GITHUB_WORKSPACE/.github/workflows/build.sh

      - name: Upload Artifact to s3
        working-directory: ${{ env.applicationfolder }}/target
        run: aws s3 cp *.war s3://${{ env.S3BUCKET }}/
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
    - uses: actions/checkout@v2
#    - uses: aws-actions/configure-aws-credentials@v1
#      with:
#        role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
#        role-session-name: GitHub-Action-Role
#        aws-region: ${{ env.AWS_REGION }}
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-1
    - run: |
        echo "Deploying branch ${{ env.GITHUB_REF }} to ${{ github.event.inputs.environment }}"
        commit_hash=`git rev-parse HEAD`
        aws deploy create-deployment --application-name CodeDeployAppNameWithASG --deployment-group-name CodeDeployGroupName --github-location repository=$GITHUB_REPOSITORY,commitId=$commit_hash --ignore-application-stop-failures
